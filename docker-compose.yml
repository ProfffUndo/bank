version: "3.8"
services:
  bankapp:
    image: 'profffundobank:0.1.0'
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bankapp
    ports:
      - "8181:8181"
    depends_on:
      bankdb:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL= jdbc:postgresql://bankdb/bank
      - SPRING_DATASOURCE_USERNAME=sofakremeneckaa
      - SPRING_DATASOURCE_PASSWORD=GGfromNaVi_2015
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SERVER_PORT= 8181


  bankdb:
    image: 'postgres:13.1-alpine'
    container_name: bankdb
    environment:
      - PGUSER=sofakremeneckaa
      - POSTGRES_USER=sofakremeneckaa
      - POSTGRES_PASSWORD=GGfromNaVi_2015
    ports:
      - "5433:5432"
    volumes:
      - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "--quiet" ]
      interval: 1s
      timeout: 5s
      retries: 10

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "send-transaction:1:3"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper

volumes:
  infrastructure:
  db-data:
  pgadmin-data: